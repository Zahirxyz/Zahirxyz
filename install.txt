#!/bin/bash

package_name="Zahir"
link_Zahirxyz="https://github.com/Zahirxyz/Zahirxyz"
link_Zahirxyz_raw="https://raw.githubusercontent.com/Zahirxyz/Zahirxyz/main"

clear
cd $HOME

version=$(curl -s "${link_Zahirxyz_raw}/assets/update/version.txt")
version="1.5"

#Check whether package is installed
package_installed() {
    local package_name=$1

    if dpkg -l | awk '{print $2}' | grep -wq "$package_name"; then
        return 0  # Package is installed
    else
        return 1  # Package is not installed
    fi
}

latest_version() {
    current_ver=$(Zahirxyz -v)
    if [ "$version" == "$current_ver" ]; then
        Zahirxyz -cb
        echo -ne  "\nYou already have Zahir latest version"
        echo -ne "\nType 'zahir' to run it"
    else 
        install_now
    fi
}

# Function to install dependencies
dependencies() {
    if [[ $(command -v curl) ]]; then
        echo -ne ""
    else
        pkgs=(curl wget)
        for pkg in "${pkgs[@]}"; do
            type -p "$pkg" &>/dev/null || {
                if [[ $(command -v pkg) ]]; then
                    pkg install "$pkg" -y
                elif [[ $(command -v apt) ]]; then
                    apt install "$pkg" -y
                elif [[ $(command -v apt-get) ]]; then
                    apt-get install "$pkg" -y
                elif [[ $(command -v pacman) ]]; then
                    sudo pacman -S "$pkg" --noconfirm
                elif [[ $(command -v dnf) ]]; then
                    sudo dnf -y install "$pkg"
                else
                    echo -e "\n Unsupported package manager, Install packages manually."
                    { reset_color; exit 1; }
                fi
            }
        done
    fi
}

# Function to set variables
variables() {
    version=$(curl -s https://raw.githubusercontent.com/Zahirxyz/Zahirxyz/main/assets/update/version.txt)
    link_Zahirxyz="https://github.com/Zahirxyz/Zahirxyz"
}

# Function to install Zahirxyz
install_deb() {
    wget --no-check-certificate ${link_Zahirxyz}/releases/download/v_${version}/Zahirxyz_${version}.deb > /dev/null 2>&1
    if [[ $(command -v termux-chroot) ]]; then
        termux-chroot dpkg -i Zahirxyz_${version}.deb
    else
        if [ "$SUDO_USER" ]; then
            sudo dpkg -i "zahirxyz_${version}.deb"
        else
            dpkg -i "zahirxyz_${version}.deb"
        fi
    fi
    rm -rf Zahirxyz_${version}.deb
}

# Function to clean up
clean() {
    if [ -e install ]; then
        rm -rf install
    fi
}

# Function to run Zahirxyz
run() {
    if [ "$SUDO_USER" ]; then
        sudo Zahirxyz
    else
        Zahirxyz
    fi
}

finish(){
    clear
    Zahirxyz -b
    echo -ne "\nZahirxyz tool is now ready type 'zahirxyz' to run it"
}

install_now(){
    dependencies
    variables
    install_deb
}

if package_installed "$package_name"; then
    latest_version
else
    install_now
    finish
fi

